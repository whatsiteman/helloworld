{"version":3,"sources":["webpack:///./src/clients/Home.js","webpack:///./src/components/Post.js","webpack:///./src/clients/Post.js","webpack:///./src/pages/index.js"],"names":["HomePage","settings","allPost","useState","edges","filter","node","status","map","posts","setPosts","useEffect","getPosts","resultData","SEO","title","className","style","margin","maxWidth","i","slug","key","to","image","Image","src","alt","dangerouslySetInnerHTML","__html","excerpt","Post","post","html","setHtml","blocks","forEach","block","type","data","level","text","file","url","caption","items","li","console","log","marginLeft","marginRight","padding","icon","faLongArrowAltLeft","size","PostPage","setPost","getPost","description","pageQuery","IndexPage","site","allSetting","reduce","a","x","value","setSettings","getSettings","isLocalPreview","Layout","basepath","pathPrefix","Home","path"],"mappings":"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","file":"component---src-pages-index-js-90d06edde8ccf2f58b6d.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Image from \"../components/Image\";\nimport SEO from \"../components/SEO\";\nimport { getPosts } from \"../service/DataService\";\n\nconst HomePage = ({ settings }) => {\n  const { allPost } = useStaticQuery(graphql`\n    query {\n      allPost {\n        edges {\n          node {\n            title\n            slug\n            excerpt\n            image\n          }\n        }\n      }\n    }\n  `);\n\n  const [posts, setPosts] = useState(\n    allPost.edges\n      .filter(({ node }) => node.status === \"published\")\n      .map(({ node }) => node) || []\n  );\n  useEffect(() => {\n    getPosts((resultData) => {\n      setPosts(resultData);\n    });\n  }, []);\n\n  return (\n    <>\n      <SEO settings={settings} title=\"Home\" className=\"stretched\" />\n      <section\n        className=\"pt-40\"\n        style={{ margin: \"0 auto\", maxWidth: \"750px\" }}\n      >\n        <div className=\"container\">\n          {posts.map((node, i) => {\n            const title = node.title || node.slug;\n            return (\n              <Link\n                className=\"row mb-3\"\n                key={node.slug}\n                to={`posts/${node.slug}`}\n              >\n                {node.image ? (\n                  <div className={`col-12 col-lg-5`}>\n                    <Image src={node.image} alt={title} />\n                  </div>\n                ) : null}\n                <div\n                  className={`col-12 ${node.image ? \"col-lg-7\" : \"col-lg-12\"}`}\n                >\n                  <div className=\"heading-block\">\n                    <h2>{title}</h2>\n                  </div>\n                  <p\n                    className=\"lead\"\n                    dangerouslySetInnerHTML={{\n                      __html: node.excerpt,\n                    }}\n                  />\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport Image from \"./Image\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Post = ({ post }) => {\n  const [html, setHtml] = useState(\"\");\n  useEffect(() => {\n    var html = \"\";\n    if (post.html) {\n      post.html.blocks.forEach(function (block) {\n        switch (block.type) {\n          case \"header\":\n            html += `<h${block.data.level}>${block.data.text}</h${block.data.level}>`;\n            break;\n          case \"paragraph\":\n            html += `<p>${block.data.text}</p>`;\n            break;\n          case \"delimiter\":\n            html += \"<hr />\";\n            break;\n          case \"image\":\n            html += `<img class=\"img-fluid\" src=\"${block.data.file.url}\" title=\"${block.data.caption}\" /><br /><em>${block.data.caption}</em>`;\n            break;\n          case \"list\":\n            html += \"<ul>\";\n            block.data.items.forEach(function (li) {\n              html += `<li>${li}</li>`;\n            });\n            html += \"</ul>\";\n            break;\n          default:\n            console.log(\"Unknown block type\", block.type);\n            break;\n        }\n      });\n      setHtml(html);\n    }\n  }, [post]);\n\n  return (\n    <section>\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: \"42rem\",\n          padding: \"2.625rem 1.3125rem\",\n        }}\n      >\n        <article>\n          <header>\n            <h1 className=\"nobottommargin\">{post.title}</h1>\n            <p>{post.excerpt}</p>\n          </header>\n          <Image\n            className=\"blog-post-header\"\n            src={post.image}\n            alt={post.title}\n          />\n          <hr />\n          <section dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n      </div>\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: \"50rem\",\n        }}\n      >\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faLongArrowAltLeft} size=\"3x\" />\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport SEO from \"../components/SEO\";\nimport Post from \"../components/Post\";\nimport { getPost } from \"../service/DataService\";\n\nconst PostPage = ({ settings, slug }) => {\n  const [post, setPost] = useState({\n    title: \"\",\n    image: \"\",\n    excerpt: \"\",\n    html: {\n      blocks: [],\n    },\n  });\n  useEffect(() => {\n    getPost(slug, (resultData) => {\n      setPost(resultData);\n    });\n  }, [slug]);\n\n  return (\n    <>\n      <SEO\n        settings={settings}\n        title={post.title}\n        description={post.excerpt}\n        className=\"stretched\"\n      />\n      <Post settings={settings} post={post} />\n    </>\n  );\n};\n\nexport default PostPage;\n","import React, { useEffect, useState } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { Router } from \"@reach/router\";\r\nimport Layout from \"../components/Layout\";\r\nimport Home from \"../clients/Home\";\r\nimport Post from \"../clients/Post\";\r\nimport { isLocalPreview, getSettings } from \"../service/DataService\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const { site, allSetting } = data;\r\n  const [settings, setSettings] = useState(\r\n    allSetting.edges.reduce(\r\n      (a, x) => ({ ...a, [x.node.key]: x.node.value }),\r\n      {}\r\n    ) || {}\r\n  );\r\n  useEffect(() => {\r\n    getSettings((resultData) => {\r\n      setSettings(resultData);\r\n    });\r\n  }, []);\r\n\r\n  return isLocalPreview() ? (\r\n    <Layout settings={settings}>\r\n      <Router basepath={site.pathPrefix}>\r\n        <Home settings={settings} path=\"/\" />\r\n        <Post settings={settings} path=\"/posts/:slug\" />\r\n      </Router>\r\n    </Layout>\r\n  ) : (\r\n    <Layout settings={settings}>\r\n      <Home settings={settings} />\r\n      {/* <Post /> Create blog posts dynamic pages at gatsby-node.js */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      pathPrefix\r\n    }\r\n    allSetting {\r\n      edges {\r\n        node {\r\n          key\r\n          value\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}